<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite7_idle1</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprite7_idle1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp=0
vsp=0
wsp=4
moveh=0
moveh2=0
movev=0
movev2=0
TimerH=0
TimerV=0
TimerPanicH=0
TimerPanicV=0
alarmcrusher=0
lastsprite=1
audio_play_sound(sound4_Dungeon5,1,true)
audio_sound_pitch(sound4_Dungeon5,0.5)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TimerV=0
movev2=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>TimerH=0
moveh2=0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_left = keyboard_check(vk_left) ||keyboard_check(ord("A")) ||gamepad_button_check(0,gp_padl);
key_right = keyboard_check(vk_right) ||keyboard_check(ord("D")) ||gamepad_button_check(0,gp_padr);
key_up = keyboard_check(vk_up) || keyboard_check(ord("W")) ||gamepad_button_check(0,gp_padu)
key_down = keyboard_check(vk_down) || keyboard_check(ord("S")) ||gamepad_button_check(0,gp_padd)
key_run = keyboard_check(vk_lshift) || gamepad_button_check(0,gp_shoulderr) ||gamepad_button_check(0,gp_shoulderrb);
if (key_run=1) &amp;&amp; TimerV==0 &amp;&amp; TimerH==0
wsp=4;
if (key_run=0) &amp;&amp; TimerV==0 &amp;&amp; TimerH==0
wsp=2;
if wsp=4
{
alarmcrusher=8
}
if wsp=2
{
alarmcrusher=16
}
var moveh = key_right - key_left;
var movev = key_down - key_up;

if TimerH=0 &amp;&amp; moveh!=0 &amp;&amp; TimerV==0
{
moveh2=moveh
TimerH=1
TimerPanicH=1
}

if TimerH=1 &amp;&amp; TimerPanicH=1
{
TimerPanicH=0
alarm[0]=alarmcrusher
}

if TimerV==0 &amp;&amp; movev!=0 &amp;&amp; TimerH==0
{
movev2=movev
TimerV=1
TimerPanicV=1
}

if TimerV=1 &amp;&amp; TimerPanicV=1
{
TimerPanicV=0
alarm[1]=alarmcrusher
}

if TimerV=1
vsp = movev2 * wsp;
else
vsp=0

if TimerH=1
hsp = moveh2 * wsp;
else
hsp=0


if(place_meeting(x+hsp,y,Wall))
{
while(!place_meeting(x+sign(hsp),y,Wall))
{
x += sign(hsp);
}
hsp=0;
}

if(place_meeting(x,y+vsp,Wall))
{
while(!place_meeting(x,y+sign(vsp),Wall))
{
y += sign(vsp);
}
vsp=0;
}

x += hsp;
y += vsp;


if hsp==0 &amp;&amp; vsp==0
{
if lastsprite=1
sprite_index=sprite7_idle1
if lastsprite=2
sprite_index=idle_sinistra
if lastsprite=3
sprite_index=Idle_destra
if lastsprite=4
sprite_index=avanti_idle
}
else
{

if wsp=4 &amp;&amp; (sign(vsp)= +1)
{
image_speed=0.25
sprite_index=sprite8_camminata1
}

if wsp=2 &amp;&amp; (sign(vsp)= +1)
{
image_speed=0.125
sprite_index=sprite8_camminata1
}

if wsp=4 &amp;&amp; (sign(vsp)= -1)
{
image_speed=0.25
sprite_index=avanti
}

if wsp=2 &amp;&amp; (sign(vsp)= -1)
{
image_speed=0.125
sprite_index=avanti
}

if wsp=4 &amp;&amp; (sign(hsp)= -1)
{
image_speed=0.25
sprite_index=Sinistra
}

if wsp=2 &amp;&amp; (sign(hsp)= -1)
{
image_speed=0.125
sprite_index=Sinistra
}
if wsp=4 &amp;&amp; (sign(hsp)= +1)
{
image_speed=0.25
sprite_index=Destra
}

if wsp=2 &amp;&amp; (sign(hsp)= +1)
{
image_speed=0.125
sprite_index=Destra
}
}

if moveh2==1
lastsprite=3

if moveh2==-1
lastsprite=2

if movev2==1
lastsprite=1

if movev2==-1
lastsprite=4


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
draw_text(50, 40, "TimerH = " + string(TimerH));
draw_text(50, 60, "TimerPanicH = " + string(TimerPanicH));
draw_text(50, 80, "TimerV = " + string(TimerV));
draw_text(50, 100, "TimerPanicV = " + string(TimerPanicV));
draw_text(50, 140, "FPS= " + string(fps));
draw_text(50, 120, "FPSReal= " + string(fps_real));
draw_text(50, 40, "Last = " + string(lastsprite));
draw_text(50, 120, "Moveh = " + string(moveh2));
draw_text(50, 140, "Movev = " + string(movev2));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
